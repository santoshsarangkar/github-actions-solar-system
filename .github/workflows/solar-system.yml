name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env: 
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v3
          with:
            node-version: 20
        - name: Cache NPM dependencies 
          uses: actions/cache@v3
          env:
            cache-name: cache-NPM-dependencies
          with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    code-coverage: 
        name: Code coverage
        runs-on: ubuntu-latest
        steps: 
          - name: Checkout Code 
            uses: actions/checkout@v4
          - name: Setup NodeJS version 18 
            uses: actions/setup-node@v4
            with: 
              node-version: 18
          #sudo apt-get install npm
          - name: Install dependencies 
            run: npm install
          - name: Run code-coverage
            continue-on-error: true 
            run: npm run code-coverage
          - name: Code-Coverage-Result
            uses: actions/upload-artifact@v3
            with: 
              path: coverage
              retention-days: 5
    docker: 
      permissions:
        actions: write
        packages: write
      name: Docker
      runs-on: ubuntu-latest
      steps: 
        - name: Checkout Repository
          uses: actions/checkout@v4
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Build and push
          uses: docker/build-push-action@v6
          with:
            push: true
            tags: ghcr.io/${{ github.actor }}/solar-system:${{ github.sha }}